<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java的基本程序设计结构</title>
      <link href="/2020/01/17/java-de-ji-ben-cheng-xu-she-ji-jie-gou/"/>
      <url>/2020/01/17/java-de-ji-ben-cheng-xu-she-ji-jie-gou/</url>
      
        <content type="html"><![CDATA[<h1 id="Java中的整数"><a href="#Java中的整数" class="headerlink" title="Java中的整数"></a>Java中的整数</h1><hr><p>Java中数值以二进制保存，数的最高位表示符号。<br>+5表示为<br>    0 00…101<br>负数一般用补码表示<br>例如-5为<br>1 0101<br>补码则为<br>1 1011</p><h1 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h1><hr><p>位运算符可以在处理整型变量时，对每一位直接操作。</p><ul><li><strong>&amp; 位与</strong><pre class=" language-java"><code class="language-java">System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">0b1010</span> <span class="token operator">&amp;</span> <span class="token number">0b1100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>二进制结果1000，输出为8</li><li><strong>| 位或</strong><pre class=" language-java"><code class="language-java">System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">0b1010</span> <span class="token operator">|</span> <span class="token number">0b1100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>二进制结果1110，输出结果为14</li><li><strong>^ 位异或</strong><pre class=" language-java"><code class="language-java">System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">0b1010</span> <span class="token operator">&amp;</span> <span class="token number">0b1100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>二进制结果0110，输出结果为6</li><li><strong>~ 位非</strong><pre class=" language-java"><code class="language-java">System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token operator">~</span> <span class="token number">0b0101</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>包括符号位，逐位取反<br>二进制结果1010，为1110的补码，输出结果为-6</li><li><strong>&lt;&lt; 左移运算符</strong><pre class=" language-java"><code class="language-java">System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>除符号位，向左移动两位。二进制结果10100，输出结果为20</li><li><strong>&gt;&gt; 右移运算符</strong><pre class=" language-java"><code class="language-java">System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5</span> <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>与左移运算符类似。-5表示为1 1011，右移两位是1 1110，属于1 0010的补码，故输出结果为-2</li><li><strong>&gt;&gt;&gt; 无符号右移运算符</strong><pre class=" language-java"><code class="language-java">System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5</span> <span class="token operator">>>></span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>类似右移运算符，但是<strong>包括了符号位</strong>。-5表示为1 1…1011，右移1位，变成了0 11…1101，是一个正数，输出结果变成了2的31次方-3，即2147483645（java中默认一个数是32位）<br><strong>不存在&lt;&lt;&lt;无符号左移运算符</strong></li></ul><h1 id="字符串相关"><a href="#字符串相关" class="headerlink" title="字符串相关"></a>字符串相关</h1><p>Java 中的字符串<strong>不可变</strong>。修改一个字符串的方法是重新定义。</p><ul><li>定义<pre class=" language-java"><code class="language-java">String HelloWorld <span class="token operator">=</span> <span class="token string">"Hello, World!"</span><span class="token punctuation">;</span></code></pre></li><li>提取子串<pre class=" language-java"><code class="language-java">String hello <span class="token operator">=</span> String<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//"Hello"</span>String world <span class="token operator">=</span> String<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//"World"</span></code></pre></li><li>串联字符，并用定界符分割<pre class=" language-java"><code class="language-java">String All <span class="token operator">=</span> String<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">,</span> hello<span class="token punctuation">,</span> world<span class="token punctuation">,</span> hello<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//"Hello,World,Hello"</span></code></pre></li><li>检测字符串是否相等<pre class=" language-java"><code class="language-java">hello <span class="token operator">=</span> <span class="token string">"hello"</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>hello<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//区分大小写，false</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>hello<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//不区分大小写，true</span></code></pre><strong>不要用==判断，==判断的是字符串的位置（类似C++中的指针）</strong></li><li>检测空串、Null<pre class=" language-java"><code class="language-java">      String str <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>str <span class="token operator">==</span> null <span class="token operator">||</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>          System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">else</span>          System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><strong>先检测null，再检测空串</strong></li><li>代码单元与码点<pre class=" language-java"><code class="language-java">String greeting <span class="token operator">=</span> <span class="token string">"Hello"</span><span class="token punctuation">;</span><span class="token keyword">int</span> n <span class="token operator">=</span> greeting<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//返回代码单元数量</span><span class="token keyword">char</span> first <span class="token operator">=</span> greeting<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//返回第0个代码单元</span><span class="token comment" spellcheck="true">//得到第3个码点</span><span class="token keyword">int</span> index <span class="token operator">=</span> greeting<span class="token punctuation">.</span><span class="token function">offsetByCodePoints</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//offset有位移的意思，这个语句的意思是从0处位移i个点</span><span class="token keyword">int</span> cp <span class="token operator">=</span> <span class="token function">greetingcodePointAt</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li><li>字符串构建<pre class=" language-java"><code class="language-java">StringBuilder builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//构建一个空的字符串构建器</span>builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>hello<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//添加字符</span>String newHello <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//创建String对象</span></code></pre></li></ul><h1 id="输入和输出"><a href="#输入和输出" class="headerlink" title="输入和输出"></a>输入和输出</h1><pre class=" language-java"><code class="language-java">        Scanner in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输入需要先构建一个Scanner对象</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"What's your name?"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String fullName <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//读取一行</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Tell me again."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String firstName <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//读取第一个单词，以空格为间隔</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"How old are you?"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> age <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//读取第一个整数</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"How tall are you?"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">double</span> height <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//读取第一个浮点数</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"full name:"</span> <span class="token operator">+</span> fullName <span class="token operator">+</span> <span class="token string">"\nfirst name:"</span>     <span class="token operator">+</span> firstName <span class="token operator">+</span> <span class="token string">"\nage:"</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">"\nheight:"</span> <span class="token operator">+</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>第一个输入例子</p><pre class=" language-java"><code class="language-java">What's your name<span class="token operator">?</span>Dennis LinTell me again<span class="token punctuation">.</span>DennisHow old are you<span class="token operator">?</span><span class="token number">18</span>How tall are you<span class="token operator">?</span><span class="token number">187.5</span>full name<span class="token operator">:</span>Dennis LINfirst name<span class="token operator">:</span>Dennisage<span class="token operator">:</span><span class="token number">18</span>height<span class="token operator">:</span><span class="token number">187.5</span></code></pre><p>第二个输入例子</p><pre class=" language-java"><code class="language-java">What's your name<span class="token operator">?</span>Dennis LinTell me again<span class="token punctuation">.</span>Dennis <span class="token number">18</span> <span class="token number">187.4</span>How old are you<span class="token operator">?</span>How tall are you<span class="token operator">?</span>full name<span class="token operator">:</span>Dennis Linfirst name<span class="token operator">:</span>Dennisage<span class="token operator">:</span><span class="token number">18</span>height<span class="token operator">:</span><span class="token number">187.4</span></code></pre><p>除nextLine，若一次性输入多项，则会对应到之后的各项输入。<br>若在Tell me again 之后输入 Dennis Lin，Lin会触发nextInt的错误。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
